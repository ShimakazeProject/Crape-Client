<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:attached="clr-namespace:DMSkin.Attached;assembly=DMSkin"
                    xmlns:local="clr-namespace:Crape_Client.CrapeClientUI.Style">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/DMSkin.AduDesign;component/Styles/Base.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <!--没背景的悬停颜色附加的按钮-->
    <Style x:Key="ButtonText" TargetType="Button" >
        <Setter Setter.Property="FrameworkElement.FocusVisualStyle" Setter.Value="{x:Null}" />
        <Setter Setter.Property="UIElement.SnapsToDevicePixels" Setter.Value="True" />
        <Setter Setter.Property="Control.Foreground" Setter.Value="#FFFFFFFF" />
        <Setter Setter.Property="FrameworkElement.Cursor" Setter.Value="Hand" />
        <Setter Setter.Property="Control.Background" Setter.Value="#00FFFFFF" />
        <Setter Setter.Property="FrameworkElement.MinWidth" Setter.Value="30" />
        <Setter Setter.Property="FrameworkElement.MinHeight" Setter.Value="30" />
        <Setter Setter.Property="FontSize" Setter.Value="14" />
        <Setter Setter.Property="Padding" Setter.Value="8,6" />
        <Setter Property="attached:Icon.Height" Value="14" />
        <Setter Property="attached:Icon.Width" Value="14" />
        <Setter Setter.Property="Control.Template">
            <Setter.Value>
                <ControlTemplate ControlTemplate.TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="move" Storyboard.TargetProperty="(UIElement.Opacity)" DoubleAnimation.To="0" Timeline.Duration="0:0:0.1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="move" Storyboard.TargetProperty="(UIElement.Opacity)" DoubleAnimation.To="0.2" Timeline.Duration="0:0:0.1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="move" Storyboard.TargetProperty="(UIElement.Opacity)" DoubleAnimation.To="0.2" Timeline.Duration="0:0:0.03" />
                                        <DoubleAnimation Storyboard.TargetName="back" Storyboard.TargetProperty="(UIElement.Opacity)" DoubleAnimation.To="0.7" Timeline.Duration="0:0:0.03" />
                                        <ThicknessAnimation Storyboard.TargetName="back" Storyboard.TargetProperty="(Margin)" ThicknessAnimation.To="0,2,0,0" Timeline.Duration="0:0:0.03" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Border.Name="border" Border.Background="{TemplateBinding Control.Background}" Border.CornerRadius="0">
                            <Grid>
                                <Border Border.Background="#00FFFFFF" UIElement.Opacity="0.2" />
                                <Border Border.Name="back" Border.CornerRadius="0" Border.Background="{TemplateBinding Control.Background}" FrameworkElement.Margin="0,0,0,0">
                                    <Grid>
                                        <Border Border.Name="move" Background="#CCC9C9C7" Border.CornerRadius="3" UIElement.Opacity="0" />
                                        <StackPanel StackPanel.Orientation="Horizontal" FrameworkElement.HorizontalAlignment="Center">
                                            <TextBlock TextBlock.Name="contentPresenter" 
                                                       Grid.Column="1" TextBlock.FontSize="{TemplateBinding Control.FontSize}" 
                                                       TextBlock.Foreground="{TemplateBinding Control.Foreground}" 
                                                       FrameworkElement.Margin="4,0,6,0" TextBlock.TextTrimming="CharacterEllipsis" 
                                                       FrameworkElement.HorizontalAlignment="Left" FrameworkElement.VerticalAlignment="Center" 
                                                       TextBlock.Text="{TemplateBinding ContentControl.Content}" UIElement.Focusable="False" 
                                                       UIElement.SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                        </StackPanel>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--退出按钮-->
    <Style x:Key="ExitRadioButtonMenu" TargetType="{x:Type RadioButton}">
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="attached:Icon.Geometry" Value="{x:Null}" />
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="#FF707070" />
        <Setter Property="Foreground" Value="#888" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border
                        x:Name="templateRoot"
                        Background="#00FFFFFF"
                         CornerRadius="3"
                        BorderThickness="0,0,0,0">
                        <WrapPanel
                            VerticalAlignment="Center"
                            Orientation="Horizontal"
                            SnapsToDevicePixels="True">
                            <Border>
                                <Path
                                Width="{TemplateBinding attached:Icon.Width}"
                                Height="{TemplateBinding attached:Icon.Height}"
                                Data="{TemplateBinding attached:Icon.Geometry}"
                                Margin="10,0,0,0"
                                Fill="{TemplateBinding Foreground}"
                                Stretch="Fill"
                                />
                            </Border>
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Grid.Column="1"
                                Margin="10,0,5,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </WrapPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" >
                            <Setter TargetName="templateRoot" Property="Opacity" Value=".7" />
                            <Setter TargetName="templateRoot" Property="Background" Value="#50FF0000" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False" />
                        <Trigger Property="IsPressed" Value="True" />
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="templateRoot" Property="Opacity" Value=".8" />
                            <Setter TargetName="templateRoot" Property="Background" Value="#FFFF0000" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--假装是滑块的按钮样式-->
    <Style x:Key="SliderRadioButton" TargetType="{x:Type RadioButton}">
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="attached:Icon.Geometry" Value="{x:Null}" />
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="#FF707070" />
        <Setter Property="Foreground" Value="#888" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border
                        x:Name="templateRoot"
                        Background="#00FFFFFF"
                         CornerRadius="3"
                        BorderThickness="0,0,0,0">
                        <WrapPanel
                            VerticalAlignment="Center"
                            Orientation="Horizontal"
                            SnapsToDevicePixels="True">
                            <Border>
                                <Path
                                Width="{TemplateBinding attached:Icon.Width}"
                                Height="{TemplateBinding attached:Icon.Height}"
                                Data="{TemplateBinding attached:Icon.Geometry}"
                                Margin="10,0,0,0"
                                Fill="{TemplateBinding Foreground}"
                                Stretch="Fill"
                                />
                            </Border>
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Grid.Column="1"
                                Margin="10,0,5,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </WrapPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" >
                            <Setter TargetName="templateRoot" Property="Opacity" Value=".7" />
                            <Setter TargetName="templateRoot" Property="Background" Value="#502E00FF" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False" />
                        <Trigger Property="IsPressed" Value="True" />
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="templateRoot" Property="Opacity" Value=".8" />
                            <Setter TargetName="templateRoot" Property="Background" Value="#FF2E00FF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>